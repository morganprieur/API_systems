# Generated by Django 3.2.15 on 2022-09-21 16:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=45)),
                ('zipcode', models.CharField(max_length=10)),
                ('street', models.CharField(max_length=45)),
                ('street_number', models.CharField(blank=True, max_length=20, null=True)),
                ('suplement', models.CharField(blank=True, max_length=45, null=True)),
                ('lat', models.FloatField()),
                ('lng', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Bei',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(max_length=45)),
                ('fuel_capacity', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='999', max_length=45, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('address', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='site_address', to='dashboard.address')),
            ],
        ),
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=45)),
                ('maintenance_name', models.CharField(max_length=45)),
                ('maintenance_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bei', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_bei', to='dashboard.bei')),
            ],
        ),
        migrations.CreateModel(
            name='Installation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('installation_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bei', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='installation_bei', to='dashboard.bei')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='installation_site', to='dashboard.site')),
            ],
        ),
        migrations.CreateModel(
            name='Door_event',
            fields=[
                ('time', models.DateTimeField(auto_now_add=True, primary_key=True, serialize=False)),
                ('state', models.SmallIntegerField()),
                ('bei', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='door_event_bei', to='dashboard.bei')),
            ],
        ),
        migrations.CreateModel(
            name='Data_acquisition',
            fields=[
                ('time', models.DateTimeField(auto_now_add=True, primary_key=True, serialize=False)),
                ('vbus', models.CharField(blank=True, max_length=45, null=True)),
                ('ibat', models.CharField(blank=True, max_length=45, null=True)),
                ('irect', models.CharField(blank=True, max_length=45, null=True)),
                ('isol', models.CharField(blank=True, max_length=45, null=True)),
                ('iload', models.CharField(blank=True, max_length=45, null=True)),
                ('lvld', models.CharField(blank=True, max_length=45, null=True)),
                ('bat_temp', models.CharField(blank=True, max_length=45, null=True)),
                ('bat_break', models.CharField(blank=True, max_length=45, null=True)),
                ('load_break', models.CharField(blank=True, max_length=45, null=True)),
                ('soc_eltek', models.CharField(blank=True, max_length=45, null=True)),
                ('ge_act', models.CharField(blank=True, max_length=45, null=True)),
                ('ge_logc', models.CharField(blank=True, max_length=45, null=True)),
                ('rect_alarm', models.CharField(blank=True, max_length=45, null=True)),
                ('l1', models.CharField(blank=True, max_length=45, null=True)),
                ('l2', models.CharField(blank=True, max_length=45, null=True)),
                ('l3', models.CharField(blank=True, max_length=45, null=True)),
                ('solar_logc', models.CharField(blank=True, max_length=45, null=True)),
                ('solar_logh', models.CharField(blank=True, max_length=45, null=True)),
                ('solar_logd', models.CharField(blank=True, max_length=45, null=True)),
                ('solar_status', models.CharField(blank=True, max_length=45, null=True)),
                ('spd_alarm', models.CharField(blank=True, max_length=45, null=True)),
                ('main_major_alarm', models.CharField(blank=True, max_length=45, null=True)),
                ('main_minor_alarm', models.CharField(blank=True, max_length=45, null=True)),
                ('leak_detection', models.CharField(blank=True, max_length=45, null=True)),
                ('heater_thermal_protect', models.CharField(blank=True, max_length=45, null=True)),
                ('load_spd', models.CharField(blank=True, max_length=45, null=True)),
                ('inverter_alarm', models.CharField(blank=True, max_length=45, null=True)),
                ('gen_alarm', models.CharField(blank=True, max_length=45, null=True)),
                ('low_bat', models.CharField(blank=True, max_length=45, null=True)),
                ('bat_flat', models.CharField(blank=True, max_length=45, null=True)),
                ('emerg_stop', models.CharField(blank=True, max_length=45, null=True)),
                ('high_cool_temp', models.CharField(blank=True, max_length=45, null=True)),
                ('low_oil_press', models.CharField(blank=True, max_length=45, null=True)),
                ('overvoltage', models.CharField(blank=True, max_length=45, null=True)),
                ('undervoltage', models.CharField(blank=True, max_length=45, null=True)),
                ('overspeed', models.CharField(blank=True, max_length=45, null=True)),
                ('underspeed', models.CharField(blank=True, max_length=45, null=True)),
                ('start_fail', models.CharField(blank=True, max_length=45, null=True)),
                ('stop_fail', models.CharField(blank=True, max_length=45, null=True)),
                ('sn', models.CharField(blank=True, max_length=45, null=True)),
                ('running', models.CharField(blank=True, max_length=45, null=True)),
                ('runningh', models.CharField(blank=True, max_length=45, null=True)),
                ('totalpower', models.CharField(blank=True, max_length=45, null=True)),
                ('vbat', models.CharField(blank=True, max_length=45, null=True)),
                ('automode', models.CharField(blank=True, max_length=45, null=True)),
                ('freq', models.CharField(blank=True, max_length=45, null=True)),
                ('rpm', models.CharField(blank=True, max_length=45, null=True)),
                ('start_cnt', models.CharField(blank=True, max_length=45, null=True)),
                ('fuel_level', models.CharField(blank=True, max_length=45, null=True)),
                ('fuel_temp', models.CharField(blank=True, max_length=45, null=True)),
                ('ext_temp', models.CharField(blank=True, max_length=45, null=True)),
                ('ge_temp', models.CharField(blank=True, max_length=45, null=True)),
                ('tgbt_temp', models.CharField(blank=True, max_length=45, null=True)),
                ('case_temp', models.CharField(blank=True, max_length=45, null=True)),
                ('soc', models.CharField(blank=True, max_length=45, null=True)),
                ('main_alarm', models.CharField(blank=True, max_length=45, null=True)),
                ('cybox_ge_act', models.CharField(blank=True, max_length=45, null=True)),
                ('ge_com_fail_alarm', models.CharField(blank=True, max_length=45, null=True)),
                ('ems_com_fail_alarm', models.CharField(blank=True, max_length=45, null=True)),
                ('fuelprobe_com_fail_alarme', models.CharField(blank=True, max_length=45, null=True)),
                ('sd_space_avail', models.CharField(blank=True, max_length=45, null=True)),
                ('tstamp', models.CharField(blank=True, max_length=45, null=True)),
                ('bat_door_contact_alarm', models.CharField(blank=True, max_length=45, null=True)),
                ('door_contact_alarm', models.CharField(blank=True, max_length=45, null=True)),
                ('ge_door_contact_alarm', models.CharField(blank=True, max_length=45, null=True)),
                ('fuel_tank_door_contact_alarm', models.CharField(blank=True, max_length=45, null=True)),
                ('pbat', models.CharField(blank=True, max_length=45, null=True)),
                ('prec', models.CharField(blank=True, max_length=45, null=True)),
                ('psol', models.CharField(blank=True, max_length=45, null=True)),
                ('pload', models.CharField(blank=True, max_length=45, null=True)),
                ('vpv', models.CharField(blank=True, max_length=45, null=True)),
                ('mppt_vbus', models.CharField(blank=True, max_length=45, null=True)),
                ('mppt_temp', models.CharField(blank=True, max_length=45, null=True)),
                ('mppt_state', models.CharField(blank=True, max_length=45, null=True)),
                ('mppt_alarm', models.CharField(blank=True, max_length=45, null=True)),
                ('iwind', models.CharField(blank=True, max_length=45, null=True)),
                ('iwind_total', models.CharField(blank=True, max_length=45, null=True)),
                ('vwind', models.CharField(blank=True, max_length=45, null=True)),
                ('pdumpload', models.CharField(blank=True, max_length=45, null=True)),
                ('pwind', models.CharField(blank=True, max_length=45, null=True)),
                ('wind_speed', models.CharField(blank=True, max_length=45, null=True)),
                ('turbinspeed', models.CharField(blank=True, max_length=45, null=True)),
                ('wshc_vbus', models.CharField(blank=True, max_length=45, null=True)),
                ('wshc_status', models.CharField(blank=True, max_length=45, null=True)),
                ('wshc_total_energy', models.CharField(blank=True, max_length=45, null=True)),
                ('load_total_energy', models.CharField(blank=True, max_length=45, null=True)),
                ('pwm', models.CharField(blank=True, max_length=45, null=True)),
                ('fan_flag', models.CharField(blank=True, max_length=45, null=True)),
                ('w1_alarm', models.CharField(blank=True, max_length=45, null=True)),
                ('wshc_com_fail_alarm', models.CharField(blank=True, max_length=45, null=True)),
                ('mppt_com_fail_alarm', models.CharField(blank=True, max_length=45, null=True)),
                ('adc_com_fail_alarm', models.CharField(blank=True, max_length=45, null=True)),
                ('bei', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_acquisition', to='dashboard.bei')),
            ],
        ),
        migrations.CreateModel(
            name='Client_profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='client_profile', to='dashboard.client')),
                ('client_user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='client_profile_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Bei_profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bei', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bei_profile', to='dashboard.bei')),
                ('bei_user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bei_profile_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='bei',
            name='client',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bei', to='dashboard.client'),
        ),
    ]
